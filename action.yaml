apiVersion: automation.cloudbees.io/v1alpha1
kind: Task
metadata:
  name: ec2-deploy-binary
  description: 'Deploy a binary to an EC2 instance'
  author: 'ashok'
  annotations:
    automation.cashokannamalai/icon: 'cloud'
    automation.cashokannamalai/color: 'blue'

spec:
  params:
    - name: source-location
      description: 'Path to the binary file(s) to deploy'
      type: string
    - name: destination-ec2-location
      description: 'Target directory on the EC2 instance'
      type: string
    - name: aws-ssh-key-data
      description: 'SSH Private Key for connecting to the EC2 instance'
      type: string
    - name: aws-user
      description: 'Username to connect to the EC2 instance'
      type: string
    - name: aws-host
      description: 'EC2 instance hostname or IP address'
      type: string
    - name: deploy-script
      description: 'Script to execute after deployment'
      type: string
    - name: jar-file-name
      description: 'Name of the JAR file to deploy and run'
      type: string

  steps:
    - name: create-ssh-key-file
      image: ubuntu
      script: |
        echo "${{ params.aws-ssh-key-data }}" > /tmp/private_key
        chmod 600 /tmp/private_key

    - name: transfer-binary-to-ec2-instance
      image: ubuntu
      script: |
        scp -i /tmp/private_key -o StrictHostKeyChecking=no ${{ params.source-location }} ${{ params.aws-user }}@${{ params.aws-host }}:${{ params.destination-ec2-location }}

    - name: run-deploy-script-on-ec2-instance
      image: ubuntu
      script: |
        ssh -i /tmp/private_key -o StrictHostKeyChecking=no ${{ params.aws-user }}@${{ params.aws-host }} "bash -s" < ${{ params.deploy-script }} ${{ params.jar-file-name }}
